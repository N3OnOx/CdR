<ul id="constructions" class="list-group list-group-flush"></ul>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js"></script>
<script>

    //////////////////////////////////////////////////////
    // Recursos de la familia
    //////////////////////////////////////////////////////
    let id = "{{familia._id}}";
    actualizar();

    function actualizar() {
        $(document).ready(function () {
            var socket = io();
            socket.emit('resources', { id: id });
            socket.on('resources', function (data) {
                let food = data[0];
                let wine = data[1];
                let wood = data[2];
                let iron = data[3];
                let stone = data[4];
                document.getElementById("food").innerHTML = food;
                document.getElementById("wine").innerHTML = wine;
                document.getElementById("wood").innerHTML = wood;
                document.getElementById("iron").innerHTML = iron;
                document.getElementById("stone").innerHTML = stone;
            });
        });
    }
    // Si queremos actualizar el recurso en tiempo real en nuestro cliente descomentar la siguiente linea. Si no, se actualizaran los recursos al recargar la p√°gina
    setInterval(actualizar, 1000);
</script>
<script>
    //////////////////////////////////////////////////////
    // Construcciones de la familia
    //////////////////////////////////////////////////////

    $(document).ready(function () {
        let id = "{{familia._id}}";
        let divConstructions = $('#constructions');
        let html = '';
        var socket = io();
        socket.emit('constructions', { id: id })
        socket.on('constructions', function (data) {
            for (var i = 0; i < data.length; i++) {
                let value;
                if (data[i][2] < data[i][5]) {
                    value = data[i][4].split(';');
                }

                html += '   <li class="list-group-item">';
                html += '       <p>Description of ' + data[i][0] + '</p>';
                if (data[i][2] < data[i][5]) {
                    html += '   <p>Valor: ' + value[0] + ' ||| Beneficio: ' + data[i][3] + '</p>';
                    html += '   <a class=\"btn btn-primary\" id=\"' + data[i][0] + '\" onclick=\"updateConstruction(\'' + data[i][0] + '\')\" >Subir a nivel ' + (data[i][2] + 1) + ' <span id="time' + data[i][0] + '"></span></a>';
                }
                html += '   </li>';

            }
            divConstructions.html(html);
        });
    })
</script>

<script>
    var socket = io();

    function updateConstruction(construction) {
        let id = "{{familia._id}}";
        socket.emit('message', { id: id, construction: construction });
        socket.on('time', function (time) {
            console.log('El server te envia tiempo: ' + time);
            if (time == 0) {
                console.log("Error en la consulta. Intentandolo de nuevo..");
                $(construction).trigger('click');
            } else {
                display = document.querySelector('#time');
                startTimer(time, display);
                function startTimer(duration, display) {
                    var timer = duration, minutes, seconds;
                    timer = timer / 1000;
                    intervalid = setInterval(function () {
                        var date = new Date(timer * 1000);
                        var hh = date.getUTCHours();
                        var mm = date.getUTCMinutes();
                        var ss = date.getSeconds();
                        var dd = Math.trunc(timer / 86400);
                        console.log(dd);


                        if (dd < 10) { dd = "0" + dd; }
                        if (hh < 10) { hh = "0" + hh; }
                        if (mm < 10) { mm = "0" + mm; }
                        if (ss < 10) { ss = "0" + ss; }
                        // This formats your string to HH:MM:SS
                        var t = dd + ":" + hh + ":" + mm + ":" + ss;

                        //display.textContent = t;
                        if (--timer < 0) {
                            clearInterval(intervalid);
                            //$("#time").fadeOut(0);
                            location.reload(true);
                        }
                    }, 1000);
                }
            }
        });
    }
</script>